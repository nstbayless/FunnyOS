name: Nightly Build

on:
    # Triggers the workflow at 03:00 UTC every day.
    schedule:
        - cron: "0 3 * * *"

    # Allows you to run this workflow manually from the Actions tab on GitHub.
    workflow_dispatch:

jobs:
    check_for_commits:
        name: Check for Recent Commits
        runs-on: ubuntu-latest
        outputs:
            has_new_commits: ${{ steps.check_git.outputs.has_new_commits }}
        steps:
            - name: Checkout for commit history check
              uses: actions/checkout@v4
              with:
                  lfs: false
                  fetch-depth: 0

            - name: Check for commits in the last 24 hours
              id: check_git
              run: |
                  if [ -z "$(git log --since='yesterday' --oneline)" ]; then
                    echo "No new commits found. Halting workflow."
                    echo "has_new_commits=false" >> $GITHUB_OUTPUT
                  else
                    echo "New commits found. Proceeding with builds."
                    echo "has_new_commits=true" >> $GITHUB_OUTPUT
                  fi

    build_device:
        name: Create Nightly Device Build
        needs: check_for_commits
        if: needs.check_for_commits.outputs.has_new_commits == 'true'
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
              with:
                  submodules: "recursive"
                  lfs: true

            - name: Setup ARM GCC Toolchain from Submodule
              run: |
                  echo "Extracting toolchain from toolchain/linux/..."
                  tar -xjf toolchain/linux/gcc-arm-none-eabi-9-2019-q4-major-x86_64-linux.tar.bz2
                  TOOLCHAIN_PATH="$GITHUB_WORKSPACE/gcc-arm-none-eabi-9-2019-q4-major/bin"
                  echo "Adding $TOOLCHAIN_PATH to the system PATH..."
                  echo "$TOOLCHAIN_PATH" >> $GITHUB_PATH

            - name: Setup Playdate SDK from Submodule and Verify Toolchain
              run: |
                  echo "Verifying compiler version:"
                  arm-none-eabi-gcc --version
                  echo "Extracting Playdate SDK from toolchain/linux/..."
                  tar -xf toolchain/linux/PlaydateSDK-2.7.6.tar
                  SDK_DIR_NAME=$(ls -d PlaydateSDK-*/ | sed 's,/$,,')
                  echo "PLAYDATE_SDK_PATH=$GITHUB_WORKSPACE/$SDK_DIR_NAME" >> $GITHUB_ENV

            - name: Build Project for Device
              run: make -j$(nproc) device pdc

            - name: Get Device Artifact Name
              id: artifact_details
              run: |
                  APP_VERSION=$(grep '^version=' Source/pdxinfo | cut -d '=' -f 2)
                  ARTIFACT_NAME="FunnyOS-${APP_VERSION}-nightly"
                  echo "artifact_name=${ARTIFACT_NAME}" >> $GITHUB_OUTPUT

            - name: Prepare Artifact for Upload
              run: |
                  mkdir artifact_root
                  mv FunnyOS.pdx artifact_root/

            - name: Upload Artifact
              uses: actions/upload-artifact@v4
              with:
                  name: ${{ steps.artifact_details.outputs.artifact_name }}
                  path: artifact_root/